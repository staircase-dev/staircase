name: CI Pipeline

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ${{matrix.platform}}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip
    - name: Install codecov
      run: |
        python -m pip install codecov
    - name: Install poetry
      run: |
        curl -sSL https://install.python-poetry.org | python - -y
        echo "/Users/runner/.local/bin" >> $GITHUB_PATH
    - name: Update PATH
      if: ${{ matrix.platform != 'windows-latest' }}
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Update Path for Windows
      if: ${{ matrix.platform == 'windows-latest' }}
      run: echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        poetry install
    - name: Lint with flake8
      run: poetry run flake8 ./staircase
    - name: Test with pytest
      run: |
        poetry run pytest ./tests --junitxml=junit/test-results-${{ matrix.python-version }}.xml --cov=staircase --cov-report=xml
        codecov
    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

      
